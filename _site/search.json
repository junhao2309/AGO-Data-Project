[
  {
    "objectID": "Written_Report.html",
    "href": "Written_Report.html",
    "title": "Written_Report",
    "section": "",
    "text": "Understanding the constraints of an organisation, the Central Procurement Agency, to ensure proper checks and prevention of suspicious procurement, the team wanted to paint a realistic image of data sampling and investigating these samples further. To conduct our analysis, the team decided on the R platform as our main tool for both statistical analysis and visualisation. Exploratory data analysis was first conducted to better understand the dataset given to us. Given that there were various descriptions and agencies within the dataset, the team felt that Rshiny should be utilised to consolidate our analysis and basic visualisation, conditional on inputs such as year, agency or description. This allowed us to visualise data within a user-input application and to better set the direction of our analysis. The team managed to find some errors and key statistics from this part of our analysis. The team then set the methodologies used for our analysis. Referencing to Nigrini, & Mittermaier (1997)[1], the team decided on using Benford's Law to sample out potentially suspicious leading number distribution and explain the limitations of the Law. To solve this limitation, the team also used the outlier test and rounding test[2] to derive further insights. Methodologies mentioned are benchmarks that can be used to initiate an action to investigate certain agencies specifically. This stance acknowledges the bandwidth of the main organisation in its routine checks of the government sector and the team hopes that the gathered insights would bring value to the individual agencies and Central Procurement agency."
  },
  {
    "objectID": "Written_Report.html#benfords-law",
    "href": "Written_Report.html#benfords-law",
    "title": "Written_Report",
    "section": "3.1 Benford’s Law",
    "text": "3.1 Benford’s Law\nBenford's Law is used to catch anomalies or fraud in data with the assumption that leading digits with smaller values occur more frequently while bigger values occur less frequently. As the values of the leading number increases from 1 to 9, the frequency should follow a decreasing function.\nThe rationale for using the Benford's law for our analysis stems from the categorisation of procurement types. With less than $10,000 being Small Value Purchases (SVP), between $10,000 to $100,000 being Invitation to Quote (ITQ) and over $100,000 being Invitation to Tender (ITT), with each category having stricter checks and balances. The team hypothesizes that fraudulent activities would occur near the $10,000 and $100,000 marking to avoid the additional checks required, agencies with a higher frequency of high leading digits are more likely to have suspicious transactions. In addition, we also hypothesize that procurements with smaller values of the leading could also be a potential area of fraud. To avoid hitting the higher category, procurements may be split several times to the same supplier and is considered in our analysis as well. The team acknowledged that non-conformity to Benford's law is not strong enough to suggest that a particular agency is fraudulent but rather it points out potential samples that should be investigated further. Through the analysis, the team found that there were several agencies with suspicious Benford's Law frequencies.\n\nThe figure above displays the 1st digit test on the Agency of Cultural Preservation and Heritage. While not perfectly conforming to Benford's Law (red-line), it is generally decreasing in nature till digits 7 to 9. By condensing the data to just values 7 to 9, the team flagged two areas of focus, duplicates and repeated procurements. For duplicates, the team checked on two main variables, procurements made on the same day or procurements made in the same amount. From this, the team identified 13 such procurements. Two were duplicated amounts made to SafeHarbor Facilities Group on the same day and the remaining 11 were made on the same day with varying amounts. 11 of these procurements were made to HorizonStone, `Energy-efficient systems and consumption monitoring`. All 11 claims had amounts between $90,000 to $100,000 which could explain the spike in leading digits 9 in graph above.\nGiven that procurements were made in large sums, the team set the baseline for procurements with the same description to be not made within the same month. For such procurements, the team set an additional condition that if it’s made to the same supplier, it would be flagged out. Under Appendix XX, there were 6 procurement claims made within 30days of each other to ApexGuard Facility Services for amounts varying between $70,000 to $120,000, all of which are in the year 2019.\n\nThe figure above refers to the Bureau of Urban Development and Infrastructure. Using the same methodology, there is a higher number of procurements with leading numbers, 2 and 3 and a distinct increase at leading numbers, 7 and 8. Leading numbers, 7 and 8 were in the 10,000s and had no irregularity. However, leading numbers, 2 and 3, had a combined total of 58 procurements in the `ITT` category. Out of all 139 procurements, 101 were `ITT` and this indicates that 57% of `ITT` procurements are in the $200,000 to $300,000 range. The Bureau of Urban Development has an average number of procurements made across the agencies. In addition, out of 5 procurements above $1,000,000, 4 of them are from the Bureau of Urban Development and Infrastructure. This raises a question of whether their operations are indeed larger than the other agencies which were not clearly specified in the dataset. This will be discussed further on the Recommendation section.\nWhile the checks done on the respective agencies above can be done on the entire dataset, it would be challenging to go through each of them and raise suspicions on the agency. The team acknowledged that repeated procurements could be due to the nature of the work or different projects progressing at the same time within an agency. In addition, the Benford's law does has its limitations, and for one, it does not account for the average procurement amount across the various agencies or the various descriptions. The next test, the Outlier test, sets the threshold for both low and high procurement amounts."
  },
  {
    "objectID": "Written_Report.html#outlier-test",
    "href": "Written_Report.html#outlier-test",
    "title": "Written_Report",
    "section": "3.2 Outlier Test",
    "text": "3.2 Outlier Test\nThe extreme outlier test was selected to check for two things: anomalies in the amounts awarded for each agency, and over-reliance on a particular supplier for each procurement description type across the whole of government.\nAnomalous Awarded Amounts\nFirst, the test was carried out on the average awarded amounts per procurement for each agency. The purpose of this test is to identify amounts that lay beyond the norm as they could be a telltale sign of mis entry of data or significant expenditure under the ITQ category.\nThe data was categorised by agency because the procurement amounts should have little variation within the same agency, if the facility-related expenditure requirements cater to an agency of a constant size. Moreover, spending budgets for each agency should also remain relatively constant over time. Any outliers within each agency detected over the 6-year period could point to major spending events or potentially erroneous entries that should be further investigated.\nUsing the upper quantiles (75%) and the interquartile ranges (IQR), the team calculated the upper extreme outlier value for each agency. This value was then used as the threshold to detect significantly anomalous data points within each category. The team then filtered the data and found that there were seven data points that lay outside of the upper extreme outlier. A similar test was done on the lower quantiles (25%) and no outliers were found.\n\nWhile these entries do not belong to the normal range of awarded amounts for the agency, the team acknowledges that the outliers could be an indication that there are larger variations in the spending amounts of these agencies.\nA noteworthy finding is that four out of five of these outliers were from the same agency: the Bureau of Urban Development and Infrastructure, between 2017 - 2021. This could be due to periodical major infrastructural development projects awarded to external contractors in line with the agency's mandate, and these might deviate greatly from the agency's day-to-day expenditures.\nFor the other three outliers, it could be said that there were multiple major procurements in these agencies in the years 2017, 2018, 2020 and 2021. In general, it would be worth recovering the details of the seven procurements for a fuller picture.\nOver-reliance on Suppliers\nThe extreme outlier test was also administered to the number of procurements awarded to each supplier across the whole of government. The same upper quantiles and inter-quartile ranges were used, and the following results were observed.\nAnother key hypothesis that the team wanted to prove was an overreliance on a select few suppliers. The procurement award statistics in Section 2 had drawn attention to two of them: InfiniteGuard Building Solutions and InfiniteSpace Building Care. To further investigate the value of the procurements, the extreme outlier test was administered to identify abnormally frequent procurements from any supplier(s).\nThe team first categorised the data into its respective procurement descriptions. Within each description type, the number of awards to each supplier should be evenly distributed to prove that the government has a well-diversified supplier base. At each description level, the team defined the upper limit to be the 95th percentile based on the suppliers who were awarded on that description. The rationale for choosing the 95th percentile was clearly evident over-reliance of the supplier for each description level.\nThe resulting values point to abnormally frequent procurements from a particular supplier for a given service, and are illustrated in the table below:\n\nThese corroborate the findings in Section 2, where Infinite Guard Care and Infinite Space Building Solutions were the top 2 awardees for the 6-year period. In addition, the analysis showed clear over-reliance for the top 20 out of 77 entries, taking the difference between the count and 95th percentile. Specifically, we see that for several procurement description levels, InfiniteGuard Building Care went above the 95th percentile, indicating over-reliance on multiple fronts.\nIn this situation, these two mentioned awardees should be investigated and evaluated. InfiniteGuard on the other hand, was awarded 190 times, significantly higher than its given 95th percentile, evident of the agency’s over-reliance of \"Cleaning supplies\" procurements."
  },
  {
    "objectID": "Written_Report.html#rounding-test",
    "href": "Written_Report.html#rounding-test",
    "title": "Written_Report",
    "section": "3.3 Rounding Test",
    "text": "3.3 Rounding Test\nAnother popular test used in audit is the Round Numbers test, which works on the principle that transactions rarely end in round numbers ($10.00) and could be a sign of fabricated values. The team first took notice that the data set was in whole numbers, no values had cents, and this was an indication that it could be rounded to the nearest dollar. For this dataset, the team has chosen to detect awarded amounts that are multiples of 100, as that of 5 and 10 were too common to present as suspicious. Awards that showed up under this test should be further investigated for its procurement description, supplier, and date to detect any signs of repetition and fabrication.\nThe first 100-multiple test results revealed 75 such awarded amounts, of which 16 belonged to the Commission for Ethical Governance and 15 belonged to the Institute for Social Justice and Equality.\n\nIt is worth noting that Institute for Social Justice and Equality and the Commission for Ethical Governance are agencies with the two highest total procurement instances over the 6-year period, which might explain the higher incidence of round numbers. For the 100-multiple amounts under these two agencies, the procurement description that showed up most was \"Energy-efficient lighting installation and maintenance\" (9 instances), however the description types were relatively evenly spread. The suppliers were also evenly spread, with each of the 52 suppliers having 1-3 procurements that were multiples of 100.\nThe team then further identified amounts that are multiples of 1000, which would present as extremely rare and hence suspicious. These values would call for more attention and should be investigated in a similar fashion to the 100-multiple amounts. The second round of filtering revealed awarded amounts that were multiples of 1000, and the following five procurements were identified.\n\nExperience has shown that round numbers are often linked to the purchase of goods or services with individual and unique features; used property, plant, and equipment purchases; and charitable or political campaign contributions. Further checks to compare whether these rounded transactions were made relative to similar procurement description within a period of 30 days. The team concluded that there is no clear trend or commonality amongst these awards, except that they occurred between the years 2017-2019. This could imply corners being cut by the office involved in preparing these records during this two-year period, and an in-depth investigation could be done to ascertain the facts of these procurements."
  },
  {
    "objectID": "Written_Report.html#data-collection-process",
    "href": "Written_Report.html#data-collection-process",
    "title": "Written_Report",
    "section": "4.1 Data Collection Process",
    "text": "4.1 Data Collection Process\nThe dataset that was presented to us had several errors which includes inaccurate categorisation of procurement type, wrong procurement code and entries that were not within the 2017-2022 period. Furthermore, given that there were very few SVP procurements and that they were all misclassified, it raises the question on whether the data was collected effectively and whether if there was a possibility of missing SVP data. Missing data is a grave fraud hazard as these data points goes untracked and no analysis can even be conducted on them. Our recommendation is to automate the process in how procurement data is collected from the various government agencies. This is under the assumption that this data set was collated from the inputs from all agencies. Errors as mentioned in the Exploratory Data Analysis section can be easily prevented if the process is digitised under one main system and automated with set conditions such as awarded amount limits for accurate categorisation of procurement type.\nIn addition, the dataset was not in a tidy format to be used in R programming or python. For example, the awarded amount was in character format, \"$40,000.00\", which was not numeric. Depending on the type of analysis and its required platform, it would be recommended if there is an additional column to suggest the currency of the procurement and leaving the awarded amount as simply 40000. In the event a procurement is made in a foreign currency, the dataset would still be relevant, without needing much change to the system."
  },
  {
    "objectID": "Written_Report.html#procurement-method",
    "href": "Written_Report.html#procurement-method",
    "title": "Written_Report",
    "section": "4.2 Procurement Method",
    "text": "4.2 Procurement Method\nUnder the assumption that the suppliers mentioned in the dataset is non-exhaustive, agencies should be checked on their over-reliance on a particular supplier. One key aspect of the procurement process can be obtained from \"known\" sources and the team argues that the \"known\" list of suppliers should be checked regularly to prevent misuse under the pretext of going for a \"known\" source. The team is in consensus that it would be important to have the agency clarify their position for choosing a supplier over any other supplier. It could be reasons stemming from better quality goods and services or a generally more competitive pricing. For the case of InfiniteSpace Building solutions, it held 190 procurements, and it could be reasons underlying national security concerns since some of these agencies suggest potential national security reasons.\nOverall, these reasons should be recorded in the data collection process after approval for better clarity during audit checks. With reference to the SVP procurement, an approving officer should be appointed for the SVP procurements. Acknowledging that human capital cost will increase, there needs to be a balance between accountability and human capital cost. The team therefore proposes to reduce the $10,000 limit to $5,000 and have an approving officer for transactions between $5,000 to $10,000. The approving officer would provide assurance that the claims made are trackable and validated. The rationale behind this proposal is:\n1.      Appointing an approving officer would reduce the risk of fraudulent activities.\n2.      Having a lower quantum would reduce the impact of fraudulent activities should it occur.\nThe insights gathered from the earlier analysis point out several problems that gave rise to suspicious procurements. Referencing to the repeated transactions made within a period of 30 days and the duplicated procurement amounts, it highlights the possibility that the officer who retrieves and the officer who approves, either did not have a clear segregation of duties or were collaborating on the procurement procedures. The team recommends that officers selected for the two roles should be from different department within the agency and for the approving officer to be in a higher position than the evaluating officer. As an additional control, procurements made with a month of each other should be re-evaluated by a third officer. Another alternative for this is to have the system flag such procurements to the agency on a monthly or quarterly basis and checked internally."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About our group",
    "section": "",
    "text": "…\n\n\n\n…\n\n\n\n…"
  },
  {
    "objectID": "about.html#member-1-teo-jun-hao",
    "href": "about.html#member-1-teo-jun-hao",
    "title": "About our group",
    "section": "",
    "text": "…"
  },
  {
    "objectID": "about.html#member-2-valerie",
    "href": "about.html#member-2-valerie",
    "title": "About our group",
    "section": "",
    "text": "…"
  },
  {
    "objectID": "about.html#member-3-emma",
    "href": "about.html#member-3-emma",
    "title": "About our group",
    "section": "",
    "text": "…"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AGO Data Challenge",
    "section": "",
    "text": "Welcome to our group’s webpage where our analysis are well documented.\nPlease refer to the written report for our indepth analysis of the case study and the Data Analytics section for the code used for the analysis and visualisation."
  },
  {
    "objectID": "Data_Challenge.html",
    "href": "Data_Challenge.html",
    "title": "AGO_Data_Challenge",
    "section": "",
    "text": "The purpose of this document is to note down our thought processes and how the team has analysed the case on each step. For readers, you can think of this document as a documentation of our work on the R platform. For the in depth analysis, please refer to our written report. # Setting Up\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(crosstalk)\nlibrary(plotly)\nlibrary(DT)\nlibrary(ggthemes)"
  },
  {
    "objectID": "Data_Challenge.html#loading-of-dataset",
    "href": "Data_Challenge.html#loading-of-dataset",
    "title": "AGO_Data_Challenge",
    "section": "0.1 Loading of Dataset",
    "text": "0.1 Loading of Dataset\n\nprocurement_data &lt;- read_csv(\"Data_file.csv\")"
  },
  {
    "objectID": "Data_Challenge.html#understanding-the-dataset",
    "href": "Data_Challenge.html#understanding-the-dataset",
    "title": "AGO_Data_Challenge",
    "section": "1.1 Understanding the Dataset",
    "text": "1.1 Understanding the Dataset\n\nChecking for Duplicate entries\n\n\nany(duplicated(procurement_data$`Procurement Code`))\n\n[1] FALSE\n\n\nProcurement Code does not have duplicated entries and has an assigned unique identifier to the procurement made.\n\nAgencyProcurement DescriptionSupplier\n\n\nThis showcases the number of Government agencies and Statutory Boards within this dataset.\n\nunique(procurement_data$Agency)\n\n [1] \"National Institute of Scientific Advancement\"            \n [2] \"Office of International Relations and Diplomatic Affairs\"\n [3] \"Ministry of Strategic Economic Planning\"                 \n [4] \"Agency for Cultural Preservation and Heritage\"           \n [5] \"Department of Public Health and Disease Control\"         \n [6] \"Institute for Social Justice and Equality\"               \n [7] \"Department of Advanced Technological Research\"           \n [8] \"Office of Public Safety and Emergency Management\"        \n [9] \"National Commission for Space Exploration\"               \n[10] \"National Cybersecurity Task Force\"                       \n[11] \"Bureau of Urban Development and Infrastructure\"          \n[12] \"Department of Energy Conservation and Sustainability\"    \n[13] \"Bureau of National Security and Intelligence\"            \n[14] \"Commission for Ethical Governance\"                       \n[15] \"Federal Agency for Environmental Protection\"             \n\n\nThere are a total of 15 agencies under this dataset.\n\n\nThis showcases how procurement purposes are being categorized.\n\nunique(procurement_data$`Procurement Description`)\n\n [1] \"Parking management and traffic control solutions.\"             \n [2] \"Space planning and utilization optimization strategies.\"       \n [3] \"Health and safety compliance management and training.\"         \n [4] \"Waste management and recycling program implementation.\"        \n [5] \"Emergency response and disaster recovery planning.\"            \n [6] \"Pest control services for a pest-free environment.\"            \n [7] \"Energy-efficient lighting installation and maintenance.\"       \n [8] \"Indoor air quality monitoring and improvement measures.\"       \n [9] \"Building maintenance and repairs.\"                             \n[10] \"Building automation and smart technology integration.\"         \n[11] \"Cleaning supplies and consumables procurement and management.\" \n[12] \"Furniture and equipment maintenance and inventory tracking.\"   \n[13] \"Fire safety system installation and maintenance.\"              \n[14] \"HVAC system maintenance and climate control optimization.\"     \n[15] \"Tenant communication and customer service assistance.\"         \n[16] \"Comprehensive janitorial services and cleanliness maintenance.\"\n[17] \"Expert landscaping and groundskeeping solutions.\"              \n[18] \"24/7 security and access control management.\"                  \n[19] \"Renovation and remodeling project management.\"                 \n[20] \"Energy-efficient systems and consumption monitoring.\"          \n\n\nThere are a total of 20 categories of reasons for why procurement was made.\n\n\nThis showcases the catalogue of suppliers agencies may refer to for procurement\n\nunique(procurement_data$Supplier)\n\n [1] \"SafeHaven Maintenance\"            \"TrueView Management\"             \n [3] \"CleanHarbor Facility Care\"        \"EverPrime Property Management\"   \n [5] \"UrbanTech Management\"             \"GrandReach Facility Care\"        \n [7] \"GoldenHarbor Management\"          \"TrueWave Facilities Management\"  \n [9] \"CleanSweep Property Management\"   \"SkyHigh Property Management\"     \n[11] \"GrandView Facilities Group\"       \"EliteTech Property Support\"      \n[13] \"SwiftGuard Management\"            \"HorizonPro Facility Management\"  \n[15] \"InfiniteSpace Building Solutions\" \"AlphaCrest Property Support\"     \n[17] \"Xtreme Maintenance\"               \"StarStone Facility Services\"     \n[19] \"UrbanGuard Facilities\"            \"InfiniteGuard Building Care\"     \n[21] \"UrbanEagle Maintenance\"           \"SilverTech Facilities Masters\"   \n[23] \"ApexGuard Facility Services\"      \"EverPro Property Support\"        \n[25] \"TruePro Building Experts\"         \"SafeReach Property Solutions\"    \n[27] \"BlueBreeze Facility Solutions\"    \"GoldenGate Facility Masters\"     \n[29] \"Reliable Facility Services\"       \"GreenPrime Facilities Group\"     \n[31] \"SkyHarbor Facility Experts\"       \"BlueCrest Facility Support\"      \n[33] \"AlphaPro Facility Solutions\"      \"HighWave Building Solutions\"     \n[35] \"TrustEdge Building Maintenance\"   \"BlueSky Property Care\"           \n[37] \"SkyStone Property Solutions\"      \"GreenLine Building Experts\"      \n[39] \"UrbanEdge Maintenance\"            \"HorizonHarbor Property Services\" \n[41] \"SafeEdge Property Care\"           \"AlphaWave Property Solutions\"    \n[43] \"InfiniteTech Building Solutions\"  \"GrandPro Facilities Support\"     \n[45] \"GoldenReach Property Management\"  \"SafeHarbor Facilities Group\"     \n[47] \"SecureSpace Management\"           \"FreshEdge Facility Support\"      \n[49] \"BlueSail Property Experts\"        \"HorizonView Property Management\" \n[51] \"TrustPro Building Maintenance\"    \"StarHarbor Facilities Group\"     \n[53] \"SilverReach Facility Services\"    \"GreenWave Facilities Management\" \n[55] \"AlphaStone Property Support\"      \"AlphaTech Facilities Management\" \n[57] \"MaxPro Building Services\"         \"TrueNorth Facility Solutions\"    \n[59] \"SecurePrime Management\"           \"FreshWave Property Support\"      \n[61] \"SwiftReach Building Maintenance\"  \"EverReach Property Care\"         \n[63] \"SilverStone Management\"           \"EliteEdge Facilities Group\"      \n[65] \"GreenEdge Facility Masters\"       \"InfiniteCare Property Services\"  \n[67] \"GoldenTech Maintenance\"           \"EliteCare Facility Support\"      \n[69] \"StarCrest Facility Services\"      \"SwiftSail Building Solutions\"    \n[71] \"FreshTech Management\"             \"SecureTech Building Solutions\"   \n[73] \"TrustGuard Facilities\"            \"FreshStart Building Solutions\"   \n[75] \"InfinitePro Facility Care\"        \"UnitedPro Property Services\"     \n[77] \"SilverLine Facility Experts\"      \"CleanStone Property Experts\"     \n[79] \"CleanReach Facility Experts\"      \"VisionQuest Facility Care\"       \n[81] \"GreenCrest Facilities Group\"      \"HighPoint Property Care\"         \n[83] \"SecureReach Property Care\"        \"UrbanReach Facility Support\"     \n[85] \"GrandTech Building Solutions\"     \"EverGreen Property Support\"      \n[87] \"BlueReach Property Solutions\"     \"TrustMax Facilities Masters\"     \n[89] \"EliteReach Building Solutions\"    \"SwiftCrest Property Management\"  \n[91] \"HighTech Facilities Group\"        \"GoldenStar Property Care\"        \n[93] \"HorizonStone Facility Services\"   \"SkyQuest Facility Care\"          \n[95] \"StarTech Facility Solutions\"      \"GrandEdge Property Solutions\"    \n[97] \"SafeTech Maintenance\"             \"SwiftTech Facility Solutions\"    \n\n\nA total of 98 suppliers were paid for their services."
  },
  {
    "objectID": "Data_Challenge.html#setting-the-correct-variable-types",
    "href": "Data_Challenge.html#setting-the-correct-variable-types",
    "title": "AGO_Data_Challenge",
    "section": "1.2 Setting the correct variable types",
    "text": "1.2 Setting the correct variable types\nThe code below shows the variable types for each column.\n\nglimpse(procurement_data)\n\nRows: 7,000\nColumns: 8\n$ `S/N`                       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ `Procurement Code`          &lt;chr&gt; \"ITQ20160157\", \"ITQ20170001\", \"ITQ20170002…\n$ `Procurement Type`          &lt;chr&gt; \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", …\n$ Agency                      &lt;chr&gt; \"National Institute of Scientific Advancem…\n$ `Procurement Description`   &lt;chr&gt; \"Parking management and traffic control so…\n$ `Date of Award (2017-2022)` &lt;chr&gt; \"1/7/2016\", \"1/1/2017\", \"5/1/2017\", \"8/1/2…\n$ Supplier                    &lt;chr&gt; \"SafeHaven Maintenance\", \"TrueView Managem…\n$ `Awarded Amount`            &lt;chr&gt; \"$40,532.00\", \"$16,928.00\", \"$14,183.00\", …\n\n\nOver here, we see that Date of Award and Awarded Amount are in character type and should be changed to date and integer respectively.\n\nclean_data &lt;- procurement_data %&gt;%\n    mutate(`Date of Award (2017-2022)` = dmy(`Date of Award (2017-2022)`)) %&gt;%\n    mutate(`Awarded Amount` = as.numeric(gsub(\",\",\"\", gsub(\"\\\\$\",\"\", `Awarded Amount`)))) %&gt;%\n    rename(Date = `Date of Award (2017-2022)`)\n\nglimpse(clean_data)\n\nRows: 7,000\nColumns: 8\n$ `S/N`                     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1…\n$ `Procurement Code`        &lt;chr&gt; \"ITQ20160157\", \"ITQ20170001\", \"ITQ20170002\",…\n$ `Procurement Type`        &lt;chr&gt; \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", \"ITQ\", \"I…\n$ Agency                    &lt;chr&gt; \"National Institute of Scientific Advancemen…\n$ `Procurement Description` &lt;chr&gt; \"Parking management and traffic control solu…\n$ Date                      &lt;date&gt; 2016-07-01, 2017-01-01, 2017-01-05, 2017-01…\n$ Supplier                  &lt;chr&gt; \"SafeHaven Maintenance\", \"TrueView Managemen…\n$ `Awarded Amount`          &lt;dbl&gt; 40532, 16928, 14183, 19908, 42332, 65341, 34…\n\n\nFor easier referencing, “Date of Award (2017-2022)” is changed to “Date”. As seen above, the respective columns have to changed accordingly."
  },
  {
    "objectID": "Data_Challenge.html#data-cleaning",
    "href": "Data_Challenge.html#data-cleaning",
    "title": "AGO_Data_Challenge",
    "section": "1.3 Data Cleaning",
    "text": "1.3 Data Cleaning\nThe first task is to ensure that the data is accurate and reliable.\nProcurement procedures depend on the estimated value of the goods or services provided.\n\nSmall value purchases (SVP)\nFor goods or services with an estimated value of up to $10,000.\nInvitation to Quote (ITQ)\nFor goods or services with an estimated value of up to $100,000.\nInvitation to Tender (ITT)\nFor goods or services with an estimated value of above $100,000.\n\n\n1.3.1 Checking Awarded Amount\nGiven the limits, we should ensure that the Procurement Type is accurate to the value attached to the procurement.\nThe code below shows that there are procurement done at below the value of $10,000 but are not labelled as SVP.\n\nany(clean_data$`Awarded Amount` &lt; 10000 & clean_data$`Procurement Type` == \"SVP\")\n\n[1] FALSE\n\nany(clean_data$`Awarded Amount` &gt; 100000 & clean_data$`Procurement Type` == \"ITT\")\n\n[1] TRUE\n\n\n\nfor (i in 1:7000){\n  if (clean_data$`Awarded Amount`[i] &lt; 10000){\n    if (clean_data$`Procurement Type`[i] != \"SVP\"){\n      clean_data$`Procurement Type`[i] = \"SVP\"\n    }\n    if (clean_data$`Awarded Amount`[i] &gt; 100000){\n      if (clean_data$`Procurement Type`[i] != \"ITT\"){\n        clean_data$`Procurement Type`[i] ==\"ITT\"\n      } \n    else {\n      if (clean_data$`Procurement Type`[i] != \"ITQ\"){\n        clean_data$`Procurement Type`[i] ==\"ITQ\"\n      }\n    }    \n    }\n    \n  }\n}\n\n\nany(clean_data$`Awarded Amount` &lt; 10000 & clean_data$`Procurement Type` == \"SVP\")\n\n[1] TRUE\n\nany(clean_data$`Awarded Amount` &gt; 10000 & clean_data$`Awarded Amount` &lt; 100000 & clean_data$`Procurement Type` == \"ITQ\")\n\n[1] TRUE\n\nany(clean_data$`Awarded Amount` &gt; 100000 & clean_data$`Procurement Type` == \"ITT\")\n\n[1] TRUE\n\n\nCategorisation have been completed.\n\n\n1.3.2 Procurement Code and Type\nThrough observation, we notice that the procurement code has the first three letters that indicate the procurement type. We have to ensure that they are correctly identified and can be flagged accordingly to the agency handling such datasets.\n\nmismatched_indices &lt;- which(str_sub(clean_data$`Procurement Code`, 1, 3) != clean_data$`Procurement Type`)\nmismatched_indices\n\n [1]  117  262  396  629  644  807 1099 1195 1316 1392\n\n\nAs we can see, there were 10 mismatched indices.\n\nclean_data[mismatched_indices, c(1,2,3,8)]\n\n# A tibble: 10 × 4\n   `S/N` `Procurement Code` `Procurement Type` `Awarded Amount`\n   &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                         &lt;dbl&gt;\n 1   117 ITQ20170116        SVP                            9509\n 2   262 ITQ20170261        SVP                            9072\n 3   396 ITQ20180087        SVP                            9888\n 4   629 ITQ20190014        SVP                            9998\n 5   644 ITQ20190029        SVP                            9438\n 6   807 ITQ20190192        SVP                            9854\n 7  1099 ITQ20200144        SVP                            9161\n 8  1195 ITQ20210029        SVP                            9537\n 9  1316 ITQ20210150        SVP                            9407\n10  1392 ITQ20220013        SVP                            8069\n\n\nFrom the table above, all 10 were mislabeled as ITQ. We can flag this to the team handling this dataset to keep watch. This could be easily fixed through automated processes by automatically assigning the correct type and code based on amount declared or invoiced in.\nNext, amend the dataframe accordingly to reflect the intended change.\n\nfinal_data &lt;- clean_data %&gt;%\n  mutate(`Procurement Code` = ifelse(\n    str_sub(`Procurement Code`, 1, 3) != `Procurement Type`,\n    paste0(`Procurement Type`, str_sub(`Procurement Code`, 4)),\n    `Procurement Code`\n  ))\nfinal_data[mismatched_indices,]\n\n# A tibble: 10 × 8\n   `S/N` `Procurement Code` Procurem…¹ Agency Procu…² Date       Suppl…³ Award…⁴\n   &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1   117 SVP20170116        SVP        Burea… Indoor… 2017-05-08 SafeHa…    9509\n 2   262 SVP20170261        SVP        Depar… Pest c… 2017-11-01 StarSt…    9072\n 3   396 SVP20180087        SVP        Burea… Parkin… 2018-04-06 Golden…    9888\n 4   629 SVP20190014        SVP        Depar… Energy… 2019-01-14 UrbanT…    9998\n 5   644 SVP20190029        SVP        Burea… Renova… 2019-02-05 EverGr…    9438\n 6   807 SVP20190192        SVP        Burea… Space … 2019-07-21 SafeRe…    9854\n 7  1099 SVP20200144        SVP        Depar… Furnit… 2020-08-31 BlueSk…    9161\n 8  1195 SVP20210029        SVP        Burea… Tenant… 2021-02-10 BlueRe…    9537\n 9  1316 SVP20210150        SVP        Depar… HVAC s… 2021-08-29 Infini…    9407\n10  1392 SVP20220013        SVP        Depar… Emerge… 2022-02-07 Secure…    8069\n# … with abbreviated variable names ¹​`Procurement Type`,\n#   ²​`Procurement Description`, ³​Supplier, ⁴​`Awarded Amount`\n\n\n\n\n1.3.3 Out of range data elements\nThe code below shows that there are at least two datasets outside the range of the suppose time period.\n\nwhich(any(final_data$Date &lt; ymd(\"2017-01-01\")),arr.ind = TRUE\n)\n\n[1] 1\n\nwhich(any(final_data$Date &gt; ymd(\"2022-12-31\")), arr.ind = TRUE)\n\n[1] 1\n\n\n\ndate_min &lt;- min(final_data$Date)\ndate_max &lt;- max(final_data$Date)\nwhich(final_data$Date == date_min)\n\n[1] 1\n\nwhich(final_data$Date == date_max)\n\n[1] 7000\n\nfinal_data[c(1,7000),]\n\n# A tibble: 2 × 8\n  `S/N` `Procurement Code` Procureme…¹ Agency Procu…² Date       Suppl…³ Award…⁴\n  &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;   &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt;\n1     1 ITQ20160157        ITQ         Natio… Parkin… 2016-07-01 SafeHa…   40532\n2  7000 ITT20240605        ITT         Commi… Energy… 2024-08-29 TrueWa…  316264\n# … with abbreviated variable names ¹​`Procurement Type`,\n#   ²​`Procurement Description`, ³​Supplier, ⁴​`Awarded Amount`\n\n\nWe can remove the two entries from the dataset.\n\nfinal &lt;- final_data[-c(1,7000),]\n\nWe did one more check using the max and min functions and found one more entry. We then remove the entry from the dataset.\n\nmax(final$Date)\n\n[1] \"2023-08-15\"\n\nmin(final$Date)\n\n[1] \"2017-01-01\"\n\nwhich(final$Date == max(final$Date))\n\n[1] 6998\n\nfinal &lt;- final[-6998,]\nmax(final$Date)\n\n[1] \"2022-12-29\"\n\n\nWe will save this data set as it is.\n\nreadr::write_csv(final, \"AGO_Cleaned_Data.csv\")\n\nThen we can just call this cleaned data from our folder.\n\nclean_data &lt;- read_csv(\"AGO_Cleaned_Data.csv\")"
  },
  {
    "objectID": "Data_Challenge.html#visualisation",
    "href": "Data_Challenge.html#visualisation",
    "title": "AGO_Data_Challenge",
    "section": "1.4 Visualisation",
    "text": "1.4 Visualisation\nAfter the dataset has been cleaned, we can now focus on basic visualisation. This is also done in our Shiny application but here are a few examples.\nFirst, we will assign a year column to the dataset.\n\nclean_data$Year &lt;- as.numeric(format(clean_data$Date, \"%Y\"))\n\n\n1.4.1 Scatterplot for Agency Procurement by Type and Year\n\nfiltered_data &lt;- clean_data %&gt;%\n  filter(Agency == \"Agency for Cultural Preservation and Heritage\" & \n           `Procurement Type` == \"ITQ\" & \n           Year == 2017)\n\np &lt;- ggplot(filtered_data, \n            aes(x = Date, y = `Awarded Amount`, \n                text = `Procurement Description`)) +\n        geom_jitter(width = 0.2, height = 0, alpha = 0.6) + \n        labs(title = paste(\"Scatter Plot for Agency For Cultural Preservation and Heritage in 2017\"), \n             x = \"Date\", \n             y = \"Amount\") + \n        theme_economist()\n      \nggplotly(p, tooltip = c(\"x\", \"y\", \"text\"))\n\n\n\n\n\n\n\n1.4.2 Supplier Awarded Amount\n\ndata_set &lt;- clean_data %&gt;%\n  filter(`Procurement Description` == \"Energy-efficient lighting installation and maintenance.\")\n    \nyearly_data &lt;- data_set %&gt;%\n  group_by(Year, Supplier) %&gt;%\n  summarise(TotalAmount = sum(`Awarded Amount`, na.rm = TRUE))\n    \ntable_data &lt;- yearly_data %&gt;%\n  pivot_wider(names_from = Year, values_from = TotalAmount, values_fill = list(TotalAmount = 0))\n    \ndatatable(table_data)\n\n\n\n\n\n\n\n\n1.4.3 Agency’s Procurement Amount\nSimilar to the above but done for Agency\n\ndata_set &lt;- clean_data %&gt;%\n  filter(`Procurement Description` == \"Energy-efficient lighting installation and maintenance.\")\n    \nyearly_data &lt;- data_set %&gt;%\n  group_by(Year, Agency) %&gt;%\n  summarise(TotalAmount = sum(`Awarded Amount`, na.rm = TRUE))\n    \ntable_data &lt;- yearly_data %&gt;%\n  pivot_wider(names_from = Year, values_from = TotalAmount, values_fill = list(TotalAmount = 0))\n    \ndatatable(table_data)\n\n\n\n\n\n\n\n# Total amount by agency\nagency_data &lt;- clean_data %&gt;%\n  group_by(Agency) %&gt;%\n  summarise(TotalAmount = sum(`Awarded Amount`, na.rm = TRUE)) %&gt;%\n  arrange(TotalAmount)\n# Total no. of procurement by agency\nproc_per_agency &lt;- clean_data %&gt;%\n  group_by(Agency)%&gt;%\n  summarize(Count = n())%&gt;%\n  arrange(desc(Count))\njoined_data &lt;- agency_data %&gt;%\n  inner_join(proc_per_agency, by = \"Agency\") %&gt;%\n  mutate(AverageAmount = round(TotalAmount/Count,)) %&gt;%\n  arrange(AverageAmount)\n\nggplot(joined_data, aes(y=reorder(Agency,TotalAmount), x= TotalAmount,fill = -AverageAmount)) +\n  geom_bar(stat=\"identity\") + \n  geom_text(aes(label=TotalAmount),hjust = 1.1, size =3, col = \"white\") +\n  labs(x = \"Total Amount\", y = \"Agency\") +\n  theme(axis.text.x = element_text(size = 5))"
  },
  {
    "objectID": "Data_Challenge.html#benfords-law",
    "href": "Data_Challenge.html#benfords-law",
    "title": "AGO_Data_Challenge",
    "section": "2.1 Benford’s Law",
    "text": "2.1 Benford’s Law\nAs there were many agencies and various description types, a Shiny application was created to consolidate our analysis findings and visualisation.\nThe key package and code used for this analysis is:\n\nlibrary(benford.analysis)\nbenford(data = XXX, number.of.digits = 1))\n\nWe referenced to Nigrini, & Mittermaier, L. (1997). The use of Benford’s Law as an aid in analytical procedures. Auditing : a Journal of Practice and Theory, 16(2), 52–67.  in understanding the use of this technique in identifying potential suspicious procurements.\nAn example of how the analysis is run is as follows:\n\nlibrary(benford.analysis)\n# Filter to respective agency\nfiltered_data &lt;- clean_data %&gt;%\n      filter(Agency == \"Agency for Cultural Preservation and Heritage\")\n             \n    \n# Do Benford's analysis on the filtered data\nbenford_result &lt;- benford(filtered_data$`Awarded Amount`, number.of.digits = 1)\nplot(benford_result)\n\n\n\n\nThe team noted that Benford’s law should follow a decreasing function as indicated in the red line and took the leading number with the highest deviation away for further investigations. This is done on several other agencies as well and is as indicated in the written report section.\n\n2.1.1 Duplication Test\nThe intuition to check for duplicates came from the Benford’s Law analysis on the Agency for Culture and Heritage as we zoomed in on the leading number, 9.\nThe test done here is on the whole dataset. Using duplicated(), we manage to find several transactions which were in the same amount.\n\n# Find the index of duplicated values\nduplicated_index &lt;- which(duplicated(clean_data$`Awarded Amount`) | duplicated(clean_data$`Awarded Amount`, fromLast = TRUE))\nlist_of_duplicate_amounts &lt;- clean_data[duplicated_index,]\n\n\nduplicated_index &lt;- which(duplicated(list_of_duplicate_amounts[, c(\"Awarded Amount\", \"Agency\", \"Supplier\")]) | \n                         duplicated(list_of_duplicate_amounts[, c(\"Awarded Amount\", \"Agency\", \"Supplier\" )], fromLast = TRUE))\n\nduplicate_amount &lt;- list_of_duplicate_amounts[duplicated_index,]\n\nFrom the above, we see entries that are duplicated for whether the amount is similar and whether the agency or suppliers that claims were made under are the same. Due to the categorisation of the claims amount, the value of an awarded amount can be split into two procurement claim to evade the ITT categorisation checks. These procurement claims should be highlighted as potential fraudulant activities.\n\n\n2.1.2 Claims made within a month of a similar procurement\nSeeing how claims were made within the same day, the team then identified procurements made 30days apart within the same agency for the same descriptionl.\n\nlibrary(dplyr)\n\nsorted_data &lt;- clean_data %&gt;%\n  arrange(`Procurement Description`, Agency, Supplier, Date)\n\nunique_full_rows_alldata &lt;- clean_data[0,]\n\n# Initialize a vector to track added codes\nadded_codes &lt;- integer(0)\n\n# Iterate over the rows of the sorted dataframe\nfor(i in 1:(nrow(sorted_data) - 1)) {\n  if(!sorted_data$`S/N`[i] %in% added_codes) {\n    for(j in (i+1):nrow(sorted_data)) {\n      \n      # Check if they are the same Task and Supplier and within 30 days\n      if(sorted_data$`Procurement Description`[i] == sorted_data$`Procurement Description`[j] && \n         sorted_data$Supplier[i] == sorted_data$Supplier[j] && \n         sorted_data$Agency[i] == sorted_data$Agency[j] &&\n         abs(as.numeric(difftime(sorted_data$Date[j], sorted_data$Date[i], units = \"days\"))) &lt;= 30) {\n        \n        # Add these rows to unique_full_rows and record the codes as added\n        unique_full_rows_alldata &lt;- rbind(unique_full_rows_alldata, sorted_data[i,], sorted_data[j,])\n        added_codes &lt;- c(added_codes, sorted_data$`S/N`[i], sorted_data$`S/N`[j])\n        \n        break # We found a pair for the ith entry, so no need to continue the inner loop\n      }\n    }\n  }\n}\n\n# If needed, sort the result again by Task, Supplier, and Date\nunique_full_rows_alldata &lt;- unique_full_rows_alldata %&gt;%\n  arrange(`Procurement Description`, Supplier, Date)\n\ndatatable(unique_full_rows_alldata)"
  },
  {
    "objectID": "Data_Challenge.html#outlier-test",
    "href": "Data_Challenge.html#outlier-test",
    "title": "AGO_Data_Challenge",
    "section": "2.2 Outlier Test",
    "text": "2.2 Outlier Test\n\n2.2.1 Agency Outlier\nUsing the below code, we defined the upper_limit as 1.5 times of the IQR.\n\noutliers_per_desc &lt;- clean_data %&gt;%   \n  group_by(`Procurement Description`) %&gt;%   \n  summarize(count = n(),             \n            upper_limit = quantile(abs(`Awarded Amount`))[4],             \n            iqr = IQR(abs(`Awarded Amount`))) %&gt;%   \n  mutate(upper_extreme_outlier = upper_limit + 1.5 * iqr)  %&gt;%   \n  select(`Procurement Description`, upper_limit, iqr, upper_extreme_outlier)\n\nclean_data %&gt;%  \n  left_join(outliers_per_desc, by = 'Procurement Description') %&gt;%    \n  filter(`Awarded Amount` &gt;= upper_extreme_outlier) %&gt;%   \n  select(`Procurement Code`, Agency, `Awarded Amount`, `Procurement Description`, upper_extreme_outlier) %&gt;%  \n  slice_max(order_by = `Awarded Amount`, n=10) %&gt;%  \n  arrange(`Procurement Code`)\n\n# A tibble: 5 × 5\n  `Procurement Code` Agency                              Award…¹ Procu…² upper…³\n  &lt;chr&gt;              &lt;chr&gt;                                 &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n1 ITT20170753        Bureau of Urban Development and In… 2646865 Buildi… 716889.\n2 ITT20180825        National Institute of Scientific A… 1284388 Indoor… 738590.\n3 ITT20200115        Bureau of Urban Development and In… 3773118 Space … 708248.\n4 ITT20210605        Bureau of Urban Development and In… 1415452 Health… 722964.\n5 ITT20210752        Bureau of Urban Development and In… 2337266 Parkin… 745160 \n# … with abbreviated variable names ¹​`Awarded Amount`,\n#   ²​`Procurement Description`, ³​upper_extreme_outlier\n\n\n\n\n2.2.2 Supplier\n\nlibrary(ggplot2) \nlibrary(dplyr)  \nSupplier_count &lt;- clean_data %&gt;%   \n  group_by(`Procurement Description`, Supplier) %&gt;%   \n  summarize(count = n())  \n  \nTask= unique(Supplier_count$`Procurement Description`)\na = data_frame()\nc = list()\nfor (i in Task){\n  filtered_data &lt;- Supplier_count %&gt;%\n    filter(`Procurement Description` == i)\n  upper_limit &lt;- quantile(filtered_data$count, 0.95)\n  print(paste0(i, \":\", upper_limit))\n  b &lt;- filtered_data %&gt;%\n    filter(count &gt; upper_limit) %&gt;%\n    mutate(`95th percentile` = upper_limit)\n  \n  a &lt;- rbind(a, b)\n    \n}\n\n[1] \"24/7 security and access control management.:7.55\"\n[1] \"Building automation and smart technology integration.:6\"\n[1] \"Building maintenance and repairs.:7\"\n[1] \"Cleaning supplies and consumables procurement and management.:4.1\"\n[1] \"Comprehensive janitorial services and cleanliness maintenance.:8\"\n[1] \"Emergency response and disaster recovery planning.:7.55\"\n[1] \"Energy-efficient lighting installation and maintenance.:14\"\n[1] \"Energy-efficient systems and consumption monitoring.:7.5\"\n[1] \"Expert landscaping and groundskeeping solutions.:7\"\n[1] \"Fire safety system installation and maintenance.:7\"\n[1] \"Furniture and equipment maintenance and inventory tracking.:7\"\n[1] \"HVAC system maintenance and climate control optimization.:8\"\n[1] \"Health and safety compliance management and training.:7\"\n[1] \"Indoor air quality monitoring and improvement measures.:7\"\n[1] \"Parking management and traffic control solutions.:7\"\n[1] \"Pest control services for a pest-free environment.:15.15\"\n[1] \"Renovation and remodeling project management.:7.5\"\n[1] \"Space planning and utilization optimization strategies.:7.5\"\n[1] \"Tenant communication and customer service assistance.:8\"\n[1] \"Waste management and recycling program implementation.:8.5\"\n\ndatatable(a)"
  },
  {
    "objectID": "Data_Challenge.html#round-number-test",
    "href": "Data_Challenge.html#round-number-test",
    "title": "AGO_Data_Challenge",
    "section": "2.3 Round Number Test",
    "text": "2.3 Round Number Test\n\nBy 100\n\n\nround_numbers &lt;- clean_data %&gt;%\n  mutate(t_round_1000 = `Awarded Amount` %% 100 == 0) %&gt;%\n  filter_at(vars(starts_with(\"t_round\")), any_vars(.)) %&gt;%\n  select(`Procurement Code`, `Procurement Description`, Agency, Date, `Awarded Amount`, Supplier, starts_with(\"t_round\")) \n\nround_numbers %&gt;%\n  filter(t_round_1000 == TRUE)%&gt;%\n  group_by(`Procurement Description`)%&gt;%\n  summarise(Count = n())%&gt;% \n  arrange(desc(Count))\n\n# A tibble: 20 × 2\n   `Procurement Description`                                      Count\n   &lt;chr&gt;                                                          &lt;int&gt;\n 1 Energy-efficient lighting installation and maintenance.            9\n 2 Fire safety system installation and maintenance.                   7\n 3 Health and safety compliance management and training.              7\n 4 Tenant communication and customer service assistance.              6\n 5 Building maintenance and repairs.                                  5\n 6 Waste management and recycling program implementation.             5\n 7 Emergency response and disaster recovery planning.                 4\n 8 Furniture and equipment maintenance and inventory tracking.        4\n 9 Indoor air quality monitoring and improvement measures.            4\n10 Space planning and utilization optimization strategies.            4\n11 Comprehensive janitorial services and cleanliness maintenance.     3\n12 Expert landscaping and groundskeeping solutions.                   3\n13 Pest control services for a pest-free environment.                 3\n14 Building automation and smart technology integration.              2\n15 HVAC system maintenance and climate control optimization.          2\n16 Parking management and traffic control solutions.                  2\n17 Renovation and remodeling project management.                      2\n18 24/7 security and access control management.                       1\n19 Cleaning supplies and consumables procurement and management.      1\n20 Energy-efficient systems and consumption monitoring.               1\n\n\n\nBy 1,000\n\n\nround_numbers &lt;- clean_data %&gt;%\n  mutate(t_round_1000 = `Awarded Amount` %% 1000 == 0) %&gt;%\n  filter_at(vars(starts_with(\"t_round\")), any_vars(.)) %&gt;%\n  select(`Procurement Code`, `Procurement Description`, Agency, Date, `Awarded Amount`, Supplier, starts_with(\"t_round\")) \n\nround_numbers %&gt;%\n  filter(t_round_1000 == TRUE)%&gt;%\n  group_by(`Procurement Description`)%&gt;%\n  summarise(Count = n())%&gt;% \n   arrange(desc(Count))\n\n# A tibble: 4 × 2\n  `Procurement Description`                                      Count\n  &lt;chr&gt;                                                          &lt;int&gt;\n1 Comprehensive janitorial services and cleanliness maintenance.     2\n2 Building automation and smart technology integration.              1\n3 Energy-efficient lighting installation and maintenance.            1\n4 Furniture and equipment maintenance and inventory tracking.        1\n\n\nAnd that is all the test conducted for this test!\nYou can refer to the shiny app here."
  }
]